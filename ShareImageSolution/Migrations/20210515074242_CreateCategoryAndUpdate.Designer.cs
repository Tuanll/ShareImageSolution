// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShareImageSolution.Data;

namespace ShareImageSolution.Migrations
{
    [DbContext(typeof(ShareImageDbContext))]
    [Migration("20210515074242_CreateCategoryAndUpdate")]
    partial class CreateCategoryAndUpdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ShareImageSolution.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Suggesstion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            NameCategory = "Thiên Nhiên",
                            Suggesstion = "Nhiều hơn về thiên nhiên"
                        },
                        new
                        {
                            CategoryId = 2,
                            NameCategory = "Động vật",
                            Suggesstion = "Nhiều hơn về động vật"
                        },
                        new
                        {
                            CategoryId = 3,
                            NameCategory = "Phong Cảnh",
                            Suggesstion = "Nhiều hơn về phong cảnh"
                        },
                        new
                        {
                            CategoryId = 4,
                            NameCategory = "Vũ Trụ",
                            Suggesstion = "Nhiều hơn về vũ trụ"
                        });
                });

            modelBuilder.Entity("ShareImageSolution.Models.Image", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DownLoad")
                        .HasColumnType("int");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("View")
                        .HasColumnType("int");

                    b.HasKey("ImageId");

                    b.ToTable("Image");

                    b.HasData(
                        new
                        {
                            ImageId = 1,
                            Alt = "Ảnh Cáo Tuyết Trắng",
                            DateCreated = new DateTime(2021, 5, 15, 14, 42, 41, 450, DateTimeKind.Local).AddTicks(1613),
                            Description = "Con cáo tuyết đang nằm trên tuyết",
                            DownLoad = 50,
                            Path = "/Images/ImageForDetail/CaoTuyet.jpg",
                            Size = "400x300",
                            Type = "jpg",
                            View = 100
                        },
                        new
                        {
                            ImageId = 2,
                            Alt = "Ảnh Con Bướm Xuân",
                            DateCreated = new DateTime(2021, 5, 15, 14, 42, 41, 451, DateTimeKind.Local).AddTicks(9466),
                            Description = "Con bướm vơn vởn cảnh hoa",
                            DownLoad = 50,
                            Path = "/Images/ImageForDetail/butterfly.jpg",
                            Size = "400x300",
                            Type = "jpg",
                            View = 100
                        },
                        new
                        {
                            ImageId = 3,
                            Alt = "Ảnh Con Chim Đậu Cành Hoa ",
                            DateCreated = new DateTime(2021, 5, 15, 14, 42, 41, 451, DateTimeKind.Local).AddTicks(9565),
                            Description = "Con đang đậu trên cành hoa vào mùa xuân",
                            DownLoad = 50,
                            Path = "/Images/ImageForDetail/ConChim.jpg",
                            Size = "400x300",
                            Type = "jpg",
                            View = 100
                        },
                        new
                        {
                            ImageId = 4,
                            Alt = "Ảnh Đỉnh Núi Thiên Nhiên",
                            DateCreated = new DateTime(2021, 5, 15, 14, 42, 41, 451, DateTimeKind.Local).AddTicks(9571),
                            Description = "Đỉnh núi cao thật đẹp, sự sáng tạo của tự nhiên",
                            DownLoad = 50,
                            Path = "/Images/ImageForDetail/DinhNui.png",
                            Size = "400x300",
                            Type = "jpg",
                            View = 100
                        },
                        new
                        {
                            ImageId = 5,
                            Alt = "Ảnh Phong Cảnh Thiên Nhiên",
                            DateCreated = new DateTime(2021, 5, 15, 14, 42, 41, 451, DateTimeKind.Local).AddTicks(9574),
                            Description = "Phong cảnh thiên nhiên vào ban đêm, cây khô dưới ánh trăng",
                            DownLoad = 50,
                            Path = "/Images/ImageForDetail/landscape.jpg",
                            Size = "400x300",
                            Type = "jpg",
                            View = 100
                        },
                        new
                        {
                            ImageId = 6,
                            Alt = "Ảnh Thiên Hà",
                            DateCreated = new DateTime(2021, 5, 15, 14, 42, 41, 451, DateTimeKind.Local).AddTicks(9577),
                            Description = "Sự vẻ đẹp của vụ trụ thật là kỳ diệu",
                            DownLoad = 50,
                            Path = "/Images/ImageForDetail/galaxy.jpg",
                            Size = "400x300",
                            Type = "jpg",
                            View = 100
                        },
                        new
                        {
                            ImageId = 7,
                            Alt = "Ảnh Rừng Cây Âm U",
                            DateCreated = new DateTime(2021, 5, 15, 14, 42, 41, 451, DateTimeKind.Local).AddTicks(9579),
                            Description = "Rừng cây âm u thiếu ánh sáng",
                            DownLoad = 50,
                            Path = "/Images/ImageForDetail/RungCayAmU.jpg",
                            Size = "400x300",
                            Type = "jpg",
                            View = 100
                        },
                        new
                        {
                            ImageId = 8,
                            Alt = "Ảnh Rừng Cây Màu Vàng",
                            DateCreated = new DateTime(2021, 5, 15, 14, 42, 41, 451, DateTimeKind.Local).AddTicks(9582),
                            Description = "Rừng cây vào mua thu",
                            DownLoad = 50,
                            Path = "/Images/ImageForDetail/RungCayMauVang.jpg",
                            Size = "400x300",
                            Type = "jpg",
                            View = 100
                        },
                        new
                        {
                            ImageId = 9,
                            Alt = "Ảnh Rừng Cây Đầy Sức Sống",
                            DateCreated = new DateTime(2021, 5, 15, 14, 42, 41, 451, DateTimeKind.Local).AddTicks(9584),
                            Description = "Lối đi vào rừng cây đầy sức sống",
                            DownLoad = 50,
                            Path = "/Images/ImageForDetail/RungCaySucSong.jpg",
                            Size = "400x300",
                            Type = "jpg",
                            View = 100
                        },
                        new
                        {
                            ImageId = 10,
                            Alt = "Ảnh Hoàng Hôn",
                            DateCreated = new DateTime(2021, 5, 15, 14, 42, 41, 451, DateTimeKind.Local).AddTicks(9587),
                            Description = "Hoàng hôn trên đồi núi",
                            DownLoad = 50,
                            Path = "/Images/ImageForDetail/sunset.jpg",
                            Size = "400x300",
                            Type = "jpg",
                            View = 100
                        },
                        new
                        {
                            ImageId = 11,
                            Alt = "Ảnh Tảng Băng",
                            DateCreated = new DateTime(2021, 5, 15, 14, 42, 41, 451, DateTimeKind.Local).AddTicks(9590),
                            Description = "Tảng băng nổi trên biển",
                            DownLoad = 50,
                            Path = "/Images/ImageForDetail/tangbang.jpg",
                            Size = "400x300",
                            Type = "jpg",
                            View = 100
                        },
                        new
                        {
                            ImageId = 12,
                            Alt = "Ảnh Phong Cảnh Cổ Xưa",
                            DateCreated = new DateTime(2021, 5, 15, 14, 42, 41, 451, DateTimeKind.Local).AddTicks(9593),
                            Description = "Bức tranh phong cảnh sơn mài thật đẹp",
                            DownLoad = 50,
                            Path = "/Images/ImageForDetail/MayMu.jpg",
                            Size = "400x300",
                            Type = "jpg",
                            View = 100
                        });
                });

            modelBuilder.Entity("ShareImageSolution.Models.ImageInCategory", b =>
                {
                    b.Property<int>("ImageId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("ImageId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ImageInCategory");

                    b.HasData(
                        new
                        {
                            ImageId = 1,
                            CategoryId = 2
                        },
                        new
                        {
                            ImageId = 2,
                            CategoryId = 2
                        },
                        new
                        {
                            ImageId = 3,
                            CategoryId = 2
                        },
                        new
                        {
                            ImageId = 4,
                            CategoryId = 3
                        },
                        new
                        {
                            ImageId = 5,
                            CategoryId = 3
                        },
                        new
                        {
                            ImageId = 6,
                            CategoryId = 2
                        },
                        new
                        {
                            ImageId = 7,
                            CategoryId = 4
                        },
                        new
                        {
                            ImageId = 8,
                            CategoryId = 1
                        },
                        new
                        {
                            ImageId = 9,
                            CategoryId = 1
                        },
                        new
                        {
                            ImageId = 10,
                            CategoryId = 1
                        },
                        new
                        {
                            ImageId = 11,
                            CategoryId = 1
                        },
                        new
                        {
                            ImageId = 12,
                            CategoryId = 1
                        });
                });

            modelBuilder.Entity("ShareImageSolution.Models.ImageInCategory", b =>
                {
                    b.HasOne("ShareImageSolution.Models.Category", "Category")
                        .WithMany("ImageInCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShareImageSolution.Models.Image", "Image")
                        .WithMany("ImageInCategories")
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
